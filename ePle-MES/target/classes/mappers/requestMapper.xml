<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--requestMapper.xml -->
 <mapper namespace="com.itwillbs.mapper.requestMapper">
 

	<!-- 리스트 가져오기 -->
	<select id="getRequestList" resultType="RequestVO">
		SELECT r.code code, r.client_code client_code, r.deadline deadline, c.name clientName ,r.product product, m.name productName,
		s.amount stock, r.status status, r.amount amount 
		FROM REQUEST r 
		join CLIENT c on r.client_code = c.code
		join STOCK s on r.product = s.code
		join MAPD m on r.product = m.code
	</select>

	<!-- 수주번호의 정보 가져오기 -->
	<select id="getRequestInfo" resultType="RequestVO">
		select * from REQUEST where code=#{code}
	</select>

	<!-- 수주정보 검색하기 -->
	<select id="research" resultType="RequestVO">
	
		SELECT r.client_code, c.name clientName ,r.product, m.name productName,
		s.amount stock, r.status
		FROM REQUEST r
		join CLIENT c on r.client_code = c.code
		join STOCK s on r.product = s.code
		join MAPD m on r.product = m.code
		limit #{startPage},#{pageSize}
		<if test="client_code != null"> where client_code like '%#{client_code}%' </if>
		<if test="client_code != null"> where client_code = #{client_code} </if>
		<if test="client_code != null"> where client_code = #{client_code} </if>
		<if test="client_code != null"> where client_code = #{client_code} </if>
		<if test="client_code != null"> where client_code = #{client_code} </if>
		<if test="client_code != null"> where client_code = #{client_code} </if>
		<if test="client_code != null"> where client_code = #{client_code} </if>

	</select>
	
	<!-- 회사찾기 -->
	<select id="getClientList" resultType="RequestVO">
			select code client_code, name clientName from CLIENT where active = 0;
	</select>
	
	<select id="findCompany" resultType="RequestVO">
	select code client_code, name clientName from CLIENT where active = 0 
			<if test="client_code!= null"> AND code like concat('%',#{client_code},'%') </if>
			<if test="clientName != null"> AND name like concat('%',#{clientName},'%') </if>
	</select>
	
	<select id="getProductList" resultType="RequestVO">
	select m.code product, m.name productName, m.unit, m.outprice currency, s.amount stock
	from MAPD m join STOCK s on m.code = s.mapd_code where m.active = 0 
	</select>

	<select id="findProduct" resultType="RequestVO">
	select m.code product, m.name prodcutName, m.unit, m.outprice currency, s.amount stock
	from MAPD m join STOCK s on m.code = s.mapd_code where m.active = 0 
		<if test="product != null">AND m.code like concat('%',#{product},'%')</if>
		<if test="productName != null">AND m.name like concat('%',#{productName},'%')</if>
	</select>
	
	<select id="getManagerList" resultType="RequestVO">
	select code manager, name managerName 
	from EMPLOYEES 
	where dep_id = '영업부'
	</select>
	
	<select id="findManager" resultType="RequestVO">
	select code manager, name managerName 
	from EMPOLOYEES 
	where dep_id = '영업부'
	<if test="manager != null"> AND code like concat('%',#{manager},'%')</if>
	<if test="managerName != null">AND name like concat('%',#{managerName},'%')</if>	
	</select>
	<!-- 수주정보 등록하기 -->
	
	
	<insert id="insertRequest">
		insert into REQUEST 
		values 
		(#{code},#{client_code},#{deadline},#{date},#{manager},#{product},#{amount}, 
		#{unit},#{stock},#{currency},"등록",0,now(),"test",now(),"test");

	</insert>

	<!-- 수주정보 수정하기 -->
	<update id="updateRequestInfo">
		SELECT
		FROM REQUEST r
		join CLIENT c on r.client_code = c.code
		join STOCK s on r.product = s.code
		join MAPD m on r.product = m.code
		where r.code = #{code}
	</update>

	<!-- 수주정보 삭제하기 -->
	<delete id="deleteRequestData">
		delete from REQUEST
		where code in #{code}
	</delete>

	<!-- 수주정보 페이징 -->
	<select id="listPage" resultType="RequestVO" >
		SELECT r.code code, r.client_code client_code, r.deadline deadline, c.name clientName ,r.product product, m.name productName,
		s.amount stock, r.status status, r.amount amount 
		FROM REQUEST r
		join CLIENT c on r.client_code = c.code
		join STOCK s on r.product = s.code
		join MAPD m on r.product = m.code
		limit #{startPage},#{pageSize}
	</select>

</mapper>