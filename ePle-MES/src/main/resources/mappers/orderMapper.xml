<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
  <!--orderMapper.xml -->
  <mapper namespace="com.itwillbs.mapper.OrderMapper">
  
  	<resultMap type="com.itwillbs.domain.OrderVO" id="order">
		<result property="code" column="code"/>
		<result property="date" column="date"/>
		<result property="group_id" column="group_id"/>
		<result property="group_name" column="group_name"/>
		<result property="code_id" column="code_id"/>
		<result property="code_name" column="code_name"/>
		<result property="client_code" column="client_code"/>
		<result property="client_name" column="client_name"/>
		<result property="amount" column="amount"/>
		<result property="price" column="price"/>
		<result property="complete" column="complete"/>
		<result property="order_date" column="order_date"/>
		<result property="reg_date" column="reg_date"/>
		<result property="reg_emp" column="reg_emp"/>
		<result property="reg_name" column="reg_name"/>
		<result property="update_date" column="update_date"/>
		<result property="update_emp" column="update_emp"/>
		<result property="update_name" column="update_name"/>
		<result property="status" column="status"/>
	</resultMap>





<!-- 	<select id="selectOrderList" parameterType="hashMap" resultMap="order">
    	SELECT o.code, o.date, co.group_name, co.code_name, cl.name client_name, o.amount, o.price,
    		o.order_date, o.reg_date, reg.name reg_name, o.update_date, up.name update_name, o.status, o.complete 
    	FROM ORDERS o
    	JOIN CLIENT cl ON o.client_code = cli.code
    	JOIN EMPLOYEES reg ON o.reg_emp = reg.code
    	JOIN EMPLOYEES up ON o.update_emp = up.code
		JOIN COMMON_CODE co ON o.group_id = co.group_id AND o.code_id = co.code_id
		WHERE o.group_id IN ('MAT','PROD','FACETC','FACNPR','FACPRO') 
			<if test="searchOrder != null or searchMapd != null">
			<if test="searchOrder != null">
				AND o.code LIKE CONCAT('%', #{searchOrder}, '%')
			</if>
			<if test="searchOrder != null and searchMapd != null">
				AND
			</if>
			<if test="searchMapd != null">
				material LIKE CONCAT('%', #{searchMapd}, '%')
			</if>
			</if>
    	ORDER BY CAST(SUBSTRING(code, 4) AS UNSIGNED) DESC	코드 정하면 바꾸기
    	LIMIT #{cri.startPage}, #{cri.pageSize}
	</select> -->
	
<!-- 	
	발주 목록, 발주 검색

	모든 발주 수
	<select id="countOrder" parameterType="hashMap" resultType="int">
		SELECT count(*) 
		FROM ORDERS
		<where>
			<if test="searchOrder != null or searchMapd != null">
			<if test="searchOrder != null">
				code LIKE CONCAT('%', #{searchOrder}, '%')
			</if>
			<if test="searchOrder != null and searchMapd != null">
				AND
			</if>
			<if test="searchMapd != null">
				material LIKE CONCAT('%', #{searchMapd}, '%')
			</if>
			</if>
		</where>
	</select>
	
	품목 검색 팝업
	<select id="SearchMAPD" parameterType="hashMap" resultMap="order">
		SELECT code, category, name
		FROM MAPD
		<where>	
			<if test="mapdCode != null or mapdName != null">
			<if test="mapdCode != null">
				code LIKE CONCAT('%', #{mapdCode}, '%')
			</if>
			<if test="mapdCode != null and mapdName != null">
				AND
			</if>
			<if test="mapdName != null">
				name LIKE CONCAT('%', #{mapdName}, '%')
			</if>
			</if>
		</where> 
    	LIMIT #{cri.startPage}, #{cri.pageSize}
	</select>	
	
	모든 품목 수
	<select id="countMAPD" parameterType="hashMap" resultType="int">
		SELECT count(*) 
		FROM MAPD
		<where>	
			<if test="mapdCode != null or mapdName != null">
			<if test="mapdCode != null">
				code LIKE CONCAT('%', #{mapdCode}, '%')
			</if>
			<if test="mapdCode != null and mapdName != null">
				AND
			</if>
			<if test="mapdName != null">
				name LIKE CONCAT('%', #{mapdName}, '%')
			</if>
			</if>
		</where>
	</select>
 
 	발주 삭제
	<select id="getDelInfo" resultMap="order">
		SELECT *
    	FROM ORDERS
		WHERE code IN
		<foreach collection="code_arr" item="item" open="(" close=")" separator=",">
			#{item}
		 </foreach>
	</select>
	
	<delete id="deleteOrder" parameterType="hashmap">
		DELETE FROM ORDERS WHERE code IN
		<foreach collection="code_arr" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete> 
  
   -->
  
  
  
  
  </mapper>