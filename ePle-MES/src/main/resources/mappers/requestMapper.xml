<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--requestMapper.xml -->
<mapper namespace="com.itwillbs.mapper.requestMapper">
	<resultMap type="com.itwillbs.domain.RequestVO" id="requestMap">
		<result property="code" column="r.code"/>
		<result property="clientName" column="c.name"/>
		<result property="product" column="r.product"/>
		<result property="productName" column="m.name"/>
		<result property="stock" column="s.total"/>
		<result property="status" column="r.status"/>
		<result property="amount" column="r.amount"/>
	</resultMap>

	<!-- 리스트 가져오기 -->
	<select id="listPage" resultType="RequestVO" parameterType="hashMap">
		SELECT r.*, c.name clientName, m.name productName
		FROM REQUEST r 
		join CLIENT c on r.client_code = c.code 
		join STOCK_VIEW s on r.product = s.code 
		join MAPD m on r.product = m.code 
		order by r.reg_date DESC 
		LIMIT #{cri.startPage},#{cri.pageSize}
	</select>

	<!-- 전체 글 개수 조회 -->
	<select id="countRequest" resultType="int">
  <![CDATA[
  	select count(*) from REQUEST where 1=1
  ]]>
	</select>

	
	<!-- 수주정보 검색하기 -->
	<select id="research" resultType="RequestVO" parameterType="hashMap">
		SELECT r.*, c.name clientName, m.name productName
		FROM REQUEST r
		LEFT JOIN CLIENT c on r.client_code = c.code
		RIGHT join STOCK_VIEW s on r.product = s.code
		LEFT join MAPD m on r.product = m.code
		where 1 = 1
		<if test="vo.clientName neq null and vo.clientName.toString() neq '' ">
		 AND c.name = #{vo.clientName} </if>
		<if test="vo.productName neq null and vo.productName.toString() neq ''">
		 AND m.name = #{vo.productName} </if>
		<if test="vo.date neq null and vo.date.toString() neq '' "> 
		<choose>
			<when test="vo.endDate neq null and vo.endDate.toString() neq '' and vo.startDate neq null and vo.startDate.toString() neq ''">
			AND r.date between #{vo.startDate} and #{vo.endDate} 
			</when>
			<when test="vo.endDate neq null and vo.endDate.toString() neq '' and (vo.startDate eq null or vo.startDate.toString() eq '')">
			AND r.date = #{vo.endDate} </when>
			<otherwise>AND r.date = #{vo.startDate} </otherwise>
		</choose>
		</if>
		<if test="vo.deadline neq null and vo.deadline.toString() neq '' ">
		<choose>
			<when test="vo.endDead neq null and vo.endDead.toString() neq '' and vo.startDead neq null and vo.startDead.toString() neq ''">
			AND r.deadline between #{vo.startDead} and #{vo.endDead} 
			</when>
			<when test="vo.endDead neq null and vo.endDead.toString() neq ''  and (vo.startDead eq null or vo.startDead.toString() eq '')">
			AND r.deadline = #{vo.endDead} 
			</when>
			<otherwise>AND r.deadline = #{vo.startDead} </otherwise>
		</choose>
		 </if>
		<if test="vo.manager neq null and vo.manager.toString() neq '' "> AND r.manager = #{vo.manager} </if>
		<if test="vo.statusList != null and vo.statusList.size() > 0" >
		 AND r.status in 
		 <foreach collection="vo.statusList" item="status" open="(" close=")" separator=",">
		 #{status} 
		 </foreach>
		 </if>
		 order by r.reg_date DESC 
		 LIMIT #{cri.startPage},#{cri.pageSize}
	</select>
	
	<!-- 검색 글 개수 조회 -->
	<select id="countSearch" resultType="int" parameterType="hashMap">
  <![CDATA[
  	select count(*) 
  	from REQUEST r 
  	LEFT JOIN CLIENT c on r.client_code = c.code
	RIGHT join STOCK_VIEW s on r.product = s.code
	LEFT join MAPD m on r.product = m.code
  	where 1=1
  ]]>
  <if test="vo.clientName != null and vo.clientName.toString() != '' "> AND c.name = #{vo.clientName} </if>
		<if test="vo.productName != null and vo.productName.toString() != ''"> AND m.name = #{vo.productName} </if>
		<if test="vo.date != null and vo.date.toString() != '' "> 
		<choose>
			<when test="vo.endDate != null and vo.endDate.toString() != '' and vo.startDate != null and vo.startDate.toString() != ''">
			AND r.date between #{vo.startDate} and #{vo.endDate} 
			</when>
			<when test="vo.endDate != null and vo.endDate.toString() != '' and (vo.startDate = null or vo.startDate.toString() = '')">
			AND r.date = #{vo.endDate} </when>
			<otherwise>AND r.date = #{vo.startDate} </otherwise>
		</choose>
		</if>
		<if test="vo.deadline != null and vo.deadline.toString() != '' ">
		<choose>
			<when test="vo.endDead != null and vo.endDead.toString() != '' and vo.startDead != null and vo.startDead.toString() != ''">
			AND r.deadline between #{vo.startDead} and #{vo.endDead} 
			</when>
			<when test="vo.endDead != null and vo.endDead.toString() != ''  and (vo.startDead = null or vo.startDead.toString() = '')">
			AND r.deadline = #{vo.endDead} 
			</when>
			<otherwise>AND r.deadline = #{vo.startDead} </otherwise>
		</choose>
		 </if>
		<if test="vo.manager != null and vo.manager.toString() != '' "> AND r.manager = #{vo.manager} </if>
		<if test="vo.statusList != null and vo.statusList.size() > 0" >
		 AND r.status in 
		 <foreach collection="vo.statusList" item="status" open="(" close=")" separator=",">
		 #{status} 
		 </foreach>
		 </if>
	</select>
	
	<!-- 수주번호의 정보 가져오기 -->
	<select id="getRequestInfo" resultType="RequestVO">
		SELECT DISTINCT r.*, c.name clientName, m.name productName, e.name managerName
		FROM REQUEST r
		LEFT JOIN CLIENT c on r.client_code = c.code
		JOIN EMPLOYEES e on r.manager = e.code 
		LEFT join MAPD m on r.product = m.code
		where r.code = #{code}
	</select>


<!-- ============================ add / search ====================== -->
	<!-- 회사찾기 -->
	<select id="getClientList" resultType="RequestVO">
		select code client_code, name clientName from CLIENT 
		where active = 1  LIMIT #{startPage},#{pageSize}
	</select>
	
	<select id="getClientCount" resultType="int">
	<![CDATA[
		select count(*) from CLIENT where active = 1 
		  ]]>
		<if test="client_code != null"> AND code like concat('%',#{client_code},'%') </if>
		<if test="clientName != null"> AND name like concat('%',#{clientName},'%') </if>
	</select>

	<select id="findCompany" resultType="RequestVO">
		select code client_code, name clientName from CLIENT where active = 1
		<if test="client_code!= null"> AND code like concat('%',#{client_code},'%') </if>
		<if test="clientName != null"> AND name like concat('%',#{clientName},'%') </if>
		LIMIT #{cri.startPage},#{cri.pageSize}
	</select>

	<select id="getManagerList" resultType="RequestVO">
		select code manager, name managerName
		from EMPLOYEES
		where dep_group = '영업'
		LIMIT #{startPage},#{pageSize}
	</select>
	
	<select id="getManagerCount" resultType="int">
	<![CDATA[
		select count(*) from EMPLOYEES where dep_group  = '영업'
		]]>
		<if test="manager != null"> AND code like concat('%',#{manager},'%')</if>
		<if test="managerName != null">AND name like concat('%',#{managerName},'%')</if>
	</select>

	<select id="findManager" resultType="RequestVO">
		select code manager, name managerName
		from EMPLOYEES
		where dep_id = '영업부'
		<if test="manager != null"> AND code like concat('%',#{manager},'%')</if>
		<if test="managerName != null">AND name like concat('%',#{managerName},'%')</if>
		LIMIT #{cri.startPage},#{cri.pageSize}
	</select>

	<select id="getProductList" resultType="RequestVO">
		select m.code product, m.name productName, m.unit, m.outprice currency,
		s.total stock
		from MAPD m join STOCK_VIEW s on m.code = s.code where m.active = 1
		and m.code_id = '003' and m.group_id ='PROD'
		LIMIT #{startPage},#{pageSize}
	</select>
	
	<select id="getProductCount" resultType="int">
	<![CDATA[
		select count(*) 
		from MAPD m join STOCK_VIEW s on m.code = s.code where m.active = 1
		and m.code_id = '003' and m.group_id ='PROD'
		]]>
		<if test="product != null and product != ''">AND m.code like concat('%',#{product},'%')</if>
		<if test="productName != null and productName != ''">AND m.name like concat('%',#{productName},'%')</if>
	</select>

	<select id="findProduct" resultType="RequestVO">
		select m.code product, m.name productName, m.unit, m.outprice
		currency, s.total stock
		from MAPD m join STOCK_VIEW s on m.code = s.code 
		join WAREHOUSE_HISTORY wh on m.code = wh.mapd_code
		where m.active = 1 and wh.category = '완제품'
		<if test="product != null and product != ''">AND m.code like concat('%',#{product},'%')</if>
		<if test="productName != null and productName != ''">AND m.name like concat('%',#{productName},'%')</if>
		LIMIT #{cri.startPage},#{cri.pageSize}
	</select>
	
<!-- ============================ add / search ====================== -->

	<!-- 수주번호 가져오기 -->
	<select id="getRecentCode" resultType="String">
		SELECT code FROM REQUEST WHERE code LIKE concat(#{result},'%') ORDER BY reg_date DESC LIMIT 0, 1
	</select>
	
	<!-- 수주정보 등록하기 -->
	<insert id="insertRequest">
		insert into REQUEST
		values
		(#{code},#{client_code},#{deadline},#{date},#{manager},#{product},#{amount},
		#{unit},#{stock},#{currency},"등록",0,now(),#{reg_emp},now(),#{reg_emp});
	</insert>

	<!-- 수주정보 수정하기 -->
	<update id="updateRequestInfo">
		update REQUEST set client_code=#{vo.client_code}, deadline=#{vo.deadline}, date=#{vo.date}, 
		manager=#{vo.manager}, product=#{vo.product}, amount=#{vo.amount}, unit=#{vo.unit}, 
		stock=#{vo.stock}, currency=#{vo.currency}, status=#{vo.status}, 
		update_date=now(), update_emp=#{userid}
		where code = #{vo.code}
	</update>
	
	<!-- 수주정보 삭제하기 -->
		<select id="getDeleteInfo" resultType="RequestVO">
		SELECT DISTINCT r.*, c.name clientName, m.name productName, e.name managerName
		FROM REQUEST r
		LEFT JOIN CLIENT c on r.client_code = c.code
		JOIN EMPLOYEES e on r.manager = e.code 
		LEFT join MAPD m on r.product = m.code
		where r.code in
		<foreach collection="code" item="codeNum" open="(" close=")" separator=",">
		 #{codeNum}
		 </foreach>
	</select>
	
	<delete id="deleteRequestData">
		delete from REQUEST
		where code in 
		<foreach collection="code" item="codeNum" open="(" close=")" separator=",">
		 #{codeNum}
		</foreach>
	</delete>
</mapper>