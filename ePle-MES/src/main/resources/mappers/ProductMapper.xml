<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ProductMapper.xml -->
<mapper namespace="com.itwillbs.mapper.ProductMapper">

   <!-- 디비 컬럼과 도메인 객체 매핑 -->
   <!-- 프로퍼티명과 컬럼명 동일 시 생략가능  -->
    <resultMap type="com.itwillbs.domain.MAPDVO" id="product">
    	<result property="code" column="code"/>
    	<result property="group_id" column="group_id"/>
    	<result property="code_id" column="code_id"/>
    	<result property="group_name" column="group_name"/>
    	<result property="code_name" column="code_name"/>
    	<result property="name" column="name"/>
    	<result property="size" column="size"/>
    	<result property="unit" column="unit"/>
    	<result property="inprice" column="inprice"/>
    	<result property="outprice" column="outprice"/>
    	<result property="reg_emp" column="reg_emp"/>
    	<result property="reg_date" column="reg_date"/>
    	<result property="update_emp" column="update_emp"/>
    	<result property="update_date" column="update_date"/>
    	<result property="active" column="active"/>
    </resultMap>

	<!-- 물품 등록할 때 창고에도 등록해서 물품찾을 수 있게 한다 -->
    <insert id="insertWareHouse">
    insert into WAREHOUSE_HISTORY
    values (concat('first',#{code}),#{code},'W03','IN','완제품',0,#{code},#{reg_emp},now())
    </insert>
    
    <!-- 물품을 삭제할 때 창고에서도 삭제한다 -->
    <delete id="deleteFromWareHouse">
		delete from WAREHOUSE_HISTORY where order_num IN
   		 <foreach collection="array" item="code" open="(" separator="," close=")">
            #{code}
        </foreach>
	</delete>
	
    <!-- 품목 등록 -->
    <insert id="insertProduct">
        INSERT INTO MAPD (code,group_id,code_id,name,size,unit,inprice,outprice,reg_emp,reg_date,update_emp,update_date,active) 
        VALUES (#{code},#{group_id},#{code_id},#{name},#{size},#{unit},#{inprice},#{outprice},#{reg_emp},now(),#{reg_emp},now(),#{active})
    </insert>

    <!-- 품목 수정 -->
    <update id="updateProduct">
        UPDATE MAPD SET code = #{code}, group_id = #{group_id}, code_id = #{code_id}, name = #{name}, size = #{size}, unit = #{unit}, inprice = #{inprice}, outprice = #{outprice}, update_emp = #{update_emp}, update_date = now(), active = #{active}  
        where code = #{code}
    </update>
    
    <!-- 특정 번호 글 조회 -->
  	<select id="getProduct" resultType="MAPDVO">
  		select * from MAPD 
  		where code = #{code} 	
  	</select>

    <!-- 품목 삭제 -->
	<delete id="deleteProducts" parameterType="string">
	    DELETE FROM MAPD WHERE code IN
	    <foreach collection="array" item="code" open="(" separator="," close=")">
	        #{code}
	    </foreach>
	</delete>
	
	<select id="getInfo" resultType="MAPDVO" parameterType="string">
        SELECT * FROM MAPD WHERE code IN
        <foreach collection="array" item="code" open="(" separator="," close=")">
            #{code}
        </foreach>
    </select>
    
	<!-- 품목 상세 -->
	<select id="infoProduct" resultType="MAPDVO">
        SELECT code,group_id,code_id,name,size,unit,inprice,outprice,reg_emp,reg_date,update_emp,update_date,active 
        FROM MAPD 
        where code = #{code}
    </select>
    
     <!-- 글 목록 조회(page) -->
  	<select id="listPage" resultMap="product">
  		select * from MAPD WHERE group_id like CONCAT('%',#{mapd},'%') 
  		limit #{cri.startPage},#{cri.pageSize} 	
  	</select>
  	
  	<!-- 전체 글 개수 조회 -->
  	<select id="countProduct" resultType="int">
  	  <![CDATA[
	  	  select count(*) from MAPD 
   	  ]]>  WHERE group_id like CONCAT('%',#{mapd},'%')
  	</select>
	
	<!-- 물품 종류 가져오기 -->
	<select id="getCommonList" resultMap="product">
		SELECT code_id, code_name FROM COMMON_CODE WHERE group_id = #{group_id}
	</select>
	
	<!-- 최근 코드 들고오기 -->
	<select id="getRecentCode" resultType="String">
		SELECT code FROM MAPD WHERE group_id LIKE '%FAC%' ORDER BY code DESC LIMIT 0, 1
	</select>
</mapper>
