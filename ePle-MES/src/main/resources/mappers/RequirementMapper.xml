<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- RequirementMapper.xml -->
<mapper namespace="com.itwillbs.mapper.RequirementMapper">

    <!-- 디비 컬럼과 도메인 객체 매핑 -->
    <!-- 프로퍼티명과 컬럼명 동일 시 생략가능  -->
    <resultMap type="com.itwillbs.domain.MAPDVO" id="requirement">
    	<result property="code" column="code"/>
    	<result property="group_id" column="group_id"/>
    	<result property="code_id" column="code_id"/>
    	<result property="name" column="name"/>
    	<result property="size" column="size"/>
    	<result property="unit" column="unit"/>
    	<result property="inprice" column="inprice"/>
    	<result property="outprice" column="outprice"/>
    	<result property="reg_emp" column="reg_emp"/>
    	<result property="reg_date" column="reg_date"/>
    	<result property="update_emp" column="update_emp"/>
    	<result property="update_date" column="update_date"/>
    	<result property="active" column="active"/>
    </resultMap>
    
    
    <resultMap type="com.itwillbs.domain.OrderVO" id="order">
    	<result property="material" column="material"/>
    </resultMap>

    <!-- 소요량 리스트 전체 조회 -->
    <select id="selectBOMList" resultType="BOMVO">
		SELECT b.*, m.name mapdName from BOM b 
		join MAPD m on m.code = b.mapd_code
		LIMIT #{startPage}, #{pageSize}
	</select>
	
	<!-- 소요량 자재품 이름 구하기 -->
	<select id="getMaterialName" resultType="String">
		select name mapdName from MAPD
		where code = #{material}
	</select>
	
	<select id="getTotal" resultType="int">
		select count(*)
		from BOM 
	</select>
	
	<select id="getRecentCodeBOM" resultType="String">
		select bno FROM BOM
		ORDER BY bno desc LIMIT 0, 1
	</select>

    <!-- 소요량 등록 -->
    <insert id="insertRequirement">
	    INSERT INTO BOM 
	    VALUES (#{codeNum}, #{mvo.amount}, #{mvo.material}, #{mvo.content}, #{mvo.mapd_code})
	</insert>

    <!-- 소요량 수정 -->
    <update id="updateRequirement">
        UPDATE MAPD SET group_id = #{group_id}, name = #{name}, material = #{material}, requirement = #{requirement}, reg_emp = #{reg_emp}, reg_date = #{reg_date}, update_emp = #{update_emp}, update_date = #{update_date}, active = #{active}  
        where group_id = #{group_id}
    </update>
    
    <!-- 특정 번호 글 조회 -->
  	<select id="getRequirement" resultType="BOMVO">
  		select b.*, m.name mapdName 
  		from BOM b
  		join MAPD m on m.code = b.mapd_code 
  		where material = #{code} 	
  	</select>
  	

    <!-- 소요량 삭제 -->
	<delete id="deleteRequirements" parameterType="string">
	    DELETE FROM MAPD WHERE code IN
	    <foreach collection="array" item="code" open="(" separator="," close=")">
	        #{group_id}
	    </foreach>
	</delete>
	
	<select id="getInfo" resultType="MAPDVO" parameterType="string">
        SELECT * FROM MAPD WHERE code IN
        <foreach collection="array" item="code" open="(" separator="," close=")">
            #{code}
        </foreach>
    </select>
    
    <!-- 전체 소요량 수 조회 -->
  	<select id="countRequirement" resultType="int">
  <![CDATA[
  	select count(*) from MAPD where 1=1
  ]]>
	</select>
	
	<!-- ==================== 팝업창= -->
	<select id="getMAPDLIST" resultMap="requirement">
		select * from MAPD where group_id='PROD' and code_id='003'
		<if test="mapdName != null and mapdName != ''">AND name = #{mapdName}</if>
	</select>
	
	<select id="getMaterialLIST" resultMap="requirement">
		select * from MAPD where group_id='PROD' and code_id='001'
		<if test="materialName != null and materialName != ''">
		AND name = #{materialName}</if>
		
	</select>
	
	<!-- ==================== 팝업창= -->
	<!-- 소요량 검색 -->
	

</mapper>
