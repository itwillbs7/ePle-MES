<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 미완성 -->
<!-- facMt.xml -->
<mapper namespace="com.itwillbs.mapper.FacMtMapper">
	<resultMap type="com.itwillbs.domain.FacMtVO" id="mt">
		<result property="code" column="code" />
		<result property="reg_date" column="reg_date" />
		<result property="emp_code" column="emp_code" />
		<result property="emp_name" column="emp_name" />
		<result property="fac_code" column="fac_code" />
		<result property="group_id" column="group_id" />
		<result property="group_name" column="group_name" />
		<result property="code_id" column="code_id" />
		<result property="code_name" column="code_name" />
		<result property="mt_subject" column="mt_subject" />
		<result property="mt_content" column="mt_content" />
		<result property="complete" column="complete" />
		<result property="manager" column="manager" />
		<result property="manager_name" column="manager_name" />
		<result property="res_info" column="res_info" />
		<result property="res_content" column="res_content" />
		<result property="comp_date" column="comp_date" />
		<collection resultMap="fac" property="facility">
			<result property="name" column="fac_name" />
			<result property="model" column="model" />
			<result property="line_code" column="line_code" />
			<result property="line_name" column="line_name" />
			<result property="group_name" column="group_name" />
			<result property="code_name" column="code_name" />
			<collection property="mapd" resultMap="mapd">
				<result property="code" column="code" />
				<result property="name" column="name" />
				<result property="inprice" column="inprice" />
			</collection>
		</collection>
	</resultMap>
	<resultMap type="com.itwillbs.domain.FacilityVO" id="fac">
		<result property="code" column="code" />
		<result property="group_name" column="group_name" />
		<result property="code_name" column="code_name" />
		<result property="model" column="model" />
		<result property="inprice" column="inprice" />
		<result property="line_code" column="line_code" />
		<result property="line_name" column="line_name" />
		<result property="uph" column="uph" />
		<result property="active" column="active" />
		<collection property="mapd" resultMap="mapd">
			<result property="mapd_code" column="mapd_code" />
			<result property="name" column="name" />
			<result property="group_id" column="group_id" />
			<result property="code_id" column="code_id" />
			<result property="inprice" column="inprice" />
		</collection>
	</resultMap>
	
	<resultMap type="com.itwillbs.domain.MAPDVO" id="mapd">
		<result property="code" column="code" />
		<result property="group_id" column="group_id" />
		<result property="code_id" column="code_id" />
		<result property="name" column="name" />
		<result property="size" column="size" />
		<result property="unit" column="unit" />
		<result property="inprice" column="inprice" />
	</resultMap>
	<!-- 공통 -->
	<!-- 최근 코드 불러오기 -->
	<select id="getRecentCode" resultType="String">
		SELECT code FROM FAC_MT
		WHERE code LIKE '%'||#{code}||'%' AND
		DATE_FORMAT(reg_date, "%Y-%m-%d") = date_format(now(), '%Y-%m-%d')
		ORDER BY code DESC LIMIT 0, 1
	</select>
	<!-- 공통 -->

	<!-- 설비보전 담당 -->
	<!-- 일상 보전 목록 표시(FAC_INFO 기준) -->
	<select id="getStatusList"
		resultType="com.itwillbs.domain.FacMtVO" resultMap="mt">
		SELECT f.code AS
		fac_code, model, m.name, l.name AS line_name, k.reg_date
		FROM FAC_INFO f
		LEFT OUTER JOIN LINE l ON l.code = f.line_code
		LEFT OUTER JOIN MAPD m ON f.mapd = m.code 
		LEFT OUTER JOIN
		(SELECT fac_code, reg_date FROM
		(SELECT fac_code, reg_date,
		row_number() OVER
		(PARTITION BY fac_code ORDER BY reg_date DESC) AS rn
		FROM FAC_MT WHERE complete = TRUE AND code_id = 'PM')
		AS r where r.rn = 1)
		AS k ON f.code = k.fac_code ORDER BY reg_date;
	</select>

	<!-- 보전 신청 목록 표시(문제 발생시)(FAC_MT 기준) -->
	<select id="getOrderList"
		resultType="com.itwillbs.domain.FacMtVO" resultMap="mt">
		SELECT f.code as
		fac_code, model, map.name, f.line_code, l.name as line_name,
		mt_subject, m.reg_date
		FROM FAC_MT m RIGHT OUTER JOIN FAC_INFO f on
		m.fac_code = f.code left OUTER join LINE l ON l.code = f.line_code 
		LEFT OUTER JOIN MAPD map ON f.mapd = map.code 
		WHERE m.complete = false and m.code_id = 'None' order by m.reg_date;
	</select>

	<select id="getOrderCount" resultType="int">
		SELECT count(f.code)
		FROM
		FAC_MT m RIGHT OUTER JOIN FAC_INFO f on m.fac_code = f.code left OUTER
		join LINE l ON l.code = f.line_code WHERE m.complete = false and
		m.code_id = 'None' order by m.reg_date;
	</select>

	<select id="getOrder" resultType="com.itwillbs.domain.FacMtVO"
		resultMap="mt">
		SELECT * FROM FAC_MT WHERE code = #{code}
	</select>
	<!-- 보전 신청 목록 표시(문제 발생시)(FAC_MT 기준) -->

	<!-- 디테일 표시 -->
	<!-- 설비 정보의 경우 FAC_INFO에서 가져오기 -->
	<!-- 보전 신청 목록 -->
	<select id="getMtList" resultType="com.itwillbs.domain.FacMtVO"
		resultMap="mt">
		SELECT * FROM FAC_MT
		WHERE fac_code = #{code} AND code_id =
		'None'
	</select>
	<select id="getMtListCount" resultType="int">
		SELECT count(*) FROM
		FAC_MT
		WHERE fac_code = #{code} AND code_id = 'None'
	</select>
	<!-- 보전 신청 목록 -->
	<!-- 보전 결과 목록 -->
	<select id="getResultList"
		resultType="com.itwillbs.domain.FacMtVO" resultMap="mt">
		SELECT * FROM
		FAC_MT WHERE fac_code = #{code} AND complete = true AND code_id in
		('BM', 'CM')
	</select>
	<select id="getResultCount" resultType="int">
		SELECT COUNT(*) FROM
		FAC_MT WHERE fac_code = #{code} AND complete = true AND code_id in
		('BM', 'CM')
	</select>
	<!-- 보전 결과 목록 -->

	<!-- 일상보전 목록 -->
	<select id="getRoutineList"
		resultType="com.itwillbs.domain.FacMtVO" resultMap="mt">
		SELECT * FROM
		FAC_MT WHERE fac_code = #{code} AND complete = true AND code_id = 'PM'
	</select>
	<select id="getRoutineCount" resultType="int">
		SELECT COUNT(*) FROM
		FAC_MT WHERE fac_code = #{code} AND complete = true AND code_id = 'PM'
	</select>
	<!-- 일상보전 목록 -->
	<!-- 디테일 표시 -->

	<!-- 보전 결과 -->
	<!-- 일상 보전(예방 보전) 삽입 -->
	<insert id="insertRoutine">
		INSERT INTO FAC_MT (code, reg_date, emp_code,
		fac_code, mt_subject, mt_content, complete, manager, comp_date)
		VALUES
		(#{code}, now(), #{emp_code}, #{fac_code}, #{mt_subject},
		#{mt_content}, TRUE, #{emp_code}, now())
	</insert>
	<!-- 보전 결과 입력, 여기서 개량,사후 보전 결정 -->
	<update id="setResult">
		UPDATE FAC_MT
		<set>
			code_id = #{code_id}, complete = true, manager = #{manager},
			res_info = #{res_info}, res_content = #{res_content}, comp_date =
			now()
		</set>
		<where>
			code = #{code}
		</where>
	</update>
	<!-- 설비보전 담당 -->

	<!-- 직원 -->
	<select id="getInfo" resultType="com.itwillbs.domain.FacMtVO"
		resultMap="mt">
		SELECT * FROM FAC_MT WHERE code = #{code}
	</select>

	<!-- 자신이 신청한 사후 보전 리스트 return -->
	<select id="getInsertedList"
		resultType="com.itwillbs.domain.FacMtVO" resultMap="mt">
		SELECT * FROM
		FAC_MT WHERE emp_code = #{code} and complete = false
	</select>

	<!-- 사후보전 신청 추가 -->
	<insert id="insertProblem">
		INSERT INTO FAC_MT (code, reg_date, emp_code,
		fac_code, code_id, mt_subject, mt_content)
		VALUES (#{code}, now(), #{emp_code}, #{fac_code}, 'None', #{mt_subject},
		#{mt_content})
	</insert>

	<!-- 사후보전 신청 편집 -->
	<update id="updateProblem">
		UPDATE FAC_MT
		<set>
			mt_subject = #{mt_subject}, mt_content = #{mt_content}
		</set>
		<where>
			code = #{code}
		</where>
	</update>

	<!-- 사후보전 신청 삭제 -->
	<delete id="deleteProblem">
		DELETE FROM FAC_MT
		<where>
			code = #{code}
		</where>
	</delete>
	<!-- 직원 -->

	<!-- 보전 내역 -->
	<sql id="search">
		<where>
			m.emp_code = #{emp_code} and m.code_id not in ('PM', 'None') AND complete = true
			<choose>
				<when test="search.isnull == false">
					<!-- 기본 검색 -->
					<if
						test="search.searchKeyword neq null and search.searchKeyword.toString() neq ''">
						<choose>
							<when test="search.index == -1">
								<foreach collection="search.searchMenu" item="item"
									open="AND (" close=")" separator=" OR ">
									${item} LIKE
									'%${search.searchKeyword}%'
								</foreach>
							</when>
							<when test="search.index != -1">
						<![CDATA[
							AND ${search.searchMenu[search.index]} LIKE '%${search.searchKeyword}%' 
						]]>
							</when>
						</choose>
					</if>
					<!-- 기본 검색 -->
				</when>
			</choose>
		</where>
	</sql>
	<sql id="join">
		LEFT OUTER JOIN FAC_INFO f ON m.fac_code = f.code
		LEFT OUTER JOIN LINE l ON f.line_code = l.code
		LEFT OUTER JOIN MAPD map ON f.mapd = map.code 
		LEFT OUTER JOIN EMPLOYEES e1 ON m.emp_code = e1.code
		LEFT OUTER JOIN EMPLOYEES e2 ON m.manager = e2.code
	</sql>
	<!-- 보전 내역 개수 -->
	<select id="getHistoryCount" resultType="int">
		SELECT COUNT(m.code)
		FROM FAC_MT m
		<include refid="join" />
		<include refid="search" />
	</select>
	<!-- 보전 내역 개수 -->
	<!-- 보전 내역 목록 -->
	<select id="getHistoryList"
		resultType="com.itwillbs.domain.FacMtVO" resultMap="mt">
		SELECT m.code, m.reg_date, m.emp_code, e1.name as emp_name,
		m.fac_code, m.code_id,
		map.name as fac_name, f.model, f.line_code, l.name as line_name, m.mt_subject,
		m.mt_content,
		m.manager, e2.name as manager_name, m.res_info, m.res_content, m.comp_date
		FROM FAC_MT m
		<include refid="join" />
		<include refid="search" />
		ORDER BY m.reg_date desc 
		LIMIT ${cri.startPage}, ${cri.pageSize}
	</select>
	<!-- 보전 내역 목록 -->
	<!-- 보전 내역 -->
</mapper>